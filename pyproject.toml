[tool.poetry]
name = "telescope-assignment"
version = "1.0.0"
description = "Telescope Assignment"
authors = ["Rafael Nunes <rafael.nunes@gmail.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.114.0"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
sqlalchemy = "^2.0.34"
psycopg2-binary = "^2.9.10"
python-dotenv = "^1.1.0"
pydantic = "^2.11.1"
pydantic-settings = "^2.4.0"
sqlmodel = "^0.0.21"
alembic = "^1.13.2"
requests = "2.32.3"
python-multipart = "^0.0.20"
aiofiles = "^24.1.0"


[tool.poetry.dev-dependencies]
black = "^24.8.0"
isort = "^5.13.2"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
mypy = "^1.11.2"
ruff = "^0.6.4"
sqlalchemy-stubs = "0.4"
pre-commit = "^3.6.2"

[tool.isort]
multi_line_output = 3
lines_after_imports = 2
line_length = 88
include_trailing_comma = true
sections = 'FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER'

[tool.black]
line-length = 100
include = '\.pyi?$'
extend-exclude = '''
(
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)
'''

[tool.ruff]
line-length = 100
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache", "migrations"]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
lint.ignore = [
    "B904",
    "B006",
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.coverage.report]
fail_under = 20

[tool.coverage.run]
omit = ['*tests/*']

[tool.mypy]
exclude = ["migrations/"]
# --strict
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
# --strict end

[[tool.mypy.overrides]]
module = [
    "fastapi_cache.*",
    "redis.*"
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
